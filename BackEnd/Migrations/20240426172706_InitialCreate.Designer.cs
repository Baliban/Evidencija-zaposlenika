// <auto-generated />
using System;
using BackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEnd.Migrations
{
    [DbContext(typeof(EdunovaContext))]
    [Migration("20240426172706_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackEnd.Models.Djelatnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odjel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Djelatnici");
                });

            modelBuilder.Entity("BackEnd.Models.Raspored", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Cetvrtak")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("Nedjelja")
                        .HasColumnType("int");

                    b.Property<int?>("Petak")
                        .HasColumnType("int");

                    b.Property<int?>("Ponedjeljak")
                        .HasColumnType("int");

                    b.Property<int?>("Srijeda")
                        .HasColumnType("int");

                    b.Property<int?>("Subota")
                        .HasColumnType("int");

                    b.Property<int?>("Utorak")
                        .HasColumnType("int");

                    b.Property<int?>("djelatnik")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("djelatnik");

                    b.ToTable("Rasporedi");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Raspored");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Rasporedfondsati", b =>
                {
                    b.Property<int>("FondsatiID")
                        .HasColumnType("int");

                    b.Property<int>("RasporediID")
                        .HasColumnType("int");

                    b.HasKey("FondsatiID", "RasporediID");

                    b.HasIndex("RasporediID");

                    b.ToTable("Rasporedfondsati");
                });

            modelBuilder.Entity("BackEnd.Models.fondsati", b =>
                {
                    b.HasBaseType("BackEnd.Models.Raspored");

                    b.HasDiscriminator().HasValue("fondsati");
                });

            modelBuilder.Entity("BackEnd.Models.Raspored", b =>
                {
                    b.HasOne("BackEnd.Models.Djelatnik", "Djelatnici")
                        .WithMany()
                        .HasForeignKey("djelatnik");

                    b.Navigation("Djelatnici");
                });

            modelBuilder.Entity("Rasporedfondsati", b =>
                {
                    b.HasOne("BackEnd.Models.fondsati", null)
                        .WithMany()
                        .HasForeignKey("FondsatiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.Models.Raspored", null)
                        .WithMany()
                        .HasForeignKey("RasporediID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
